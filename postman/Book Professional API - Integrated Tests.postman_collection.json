{
	"info": {
		"_postman_id": "479f72f6-f555-4bac-9777-bec79d9d3524",
		"name": "Book Professional API - Integrated Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User is successfully created\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"console.log(jsonData.message[24]);\r",
							"postman.setEnvironmentVariable(\"userId\", jsonData.message[24]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Allan Alves\",\r\n    \"age\":28,\r\n    \"gender\":\"MALE\",\r\n    \"username\":\"allanalves\",\r\n    \"email\":\"allanalves@gmail.com\",\r\n    \"password\":\"12345\",\r\n    \"birthDate\":\"26/12/1992\",\r\n    \"role\": \"ADMIN\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authenticate User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User is successfully authenticated\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"jwtToken\",jsonData.jwtToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"allanalves\",\r\n    \"password\": \"12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/users/authenticate",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User is successfully updated\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Allan Alves\",\r\n    \"age\":28,\r\n    \"gender\":\"MALE\",\r\n    \"username\":\"allanalves\",\r\n    \"email\":\"allanalves2@gmail.com\",\r\n    \"password\":\"12345\",\r\n    \"birthDate\":\"26/12/1992\",\r\n    \"role\":\"ADMIN\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/users/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Author is successfully created\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"authorId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Allan Alves\",\r\n    \"age\": 28\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/authors",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Author By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Author with informed ID is succesfully found\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/authors/{{authorId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"authors",
						"{{authorId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Authors are succesfully listed!\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/authors",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Publisher",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Publisher is successfully created\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"publisherId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Alves Editora\",\r\n    \"code\": \"Allan123\",\r\n    \"foundationDate\":\"17/03/2021\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/api/v1/publishers",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"publishers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find By Publisher Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Publisher with informed ID is succesfully found\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/publishers/{{publisherId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"publishers",
						"{{publisherId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Publishers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Publishers are succesfully listed!\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/publishers",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"publishers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Book is successfully created\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"bookId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Spring Boot Professional 123\",\r\n    \"isbn\": \"978-3-16-148410-0\",\r\n    \"publisherId\": {{publisherId}},\r\n    \"authorId\": {{authorId}},\r\n    \"pages\": 100,\r\n    \"chapters\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/books",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Book By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Book with informed ID is succesfully found\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/books/{{bookId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"books",
						"{{bookId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Books are succesfully listed!\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/books",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Book is successfully updated\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Spring Boot Professional 1234\",\r\n    \"isbn\": \"978-3-16-148410-0\",\r\n    \"publisherId\": {{publisherId}},\r\n    \"authorId\": {{authorId}},\r\n    \"pages\": 100,\r\n    \"chapters\": 10\r\n}"
				},
				"url": {
					"raw": "{{url}}/api/v1/books/{{bookId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"books",
						"{{bookId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Book by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Book with informed ID is successfully deleted!\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/books/{{bookId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"books",
						"{{bookId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Author by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Author with informed ID is successfully deleted!\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/authors/{{authorId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"authors",
						"{{authorId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Publisher by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Publisher with informed ID is successfully deleted!\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/publishers/{{publisherId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"publishers",
						"{{publisherId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User with informed ID is successfully deleted!\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/users/{{userId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	]
}